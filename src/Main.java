/** * @author      Jonathan J. Troiano * @date        Last updated Monday, December 17, 2018 * @description Demonstrates functionality of the program for REPLit JPP 16. */import java.util.ArrayList;import java.util.Collection; // Collections and Collection are NOT the same!!!import java.util.Collections;import java.util.List;public class Main {    public static void main(String args[]) {        // Write one line of code to create an ArrayList of products    // ArrayList<Product> productList = new Collection<>();    /**[JJT] I edited this to be treated as Collection. The directions provided seem to be     * self-conflicting--If I create an ArrayList of products then the methods (directions)     * provided in testCollection won't work. They won't be of the proper data type and therefore     * won't be able to return an ArrayList to a Collection.     */    ArrayList productsArray;        // Write one line of code to call testCollection and assign the result to the ArrayList    // TODO: Note, it returns    productsArray = testCollection();        // Write one line of code to sort the ArrayList    Collections.sort(productsArray);        // Call the print method on the ArrayList    genericPrint(productsArray);  }    // Step 15  // Complete the header for the testCollection method here  public static ArrayList testCollection() {        AudioPlayer a1 = new AudioPlayer("iPod Mini", "MP3");    AudioPlayer a2 = new AudioPlayer("Walkman", "WAV ");    MoviePlayer m1 = new MoviePlayer("DBPOWER MK101",        new Screen("720x480", 40, 22), MonitorType.LCD);    MoviePlayer m2 = new MoviePlayer("Pyle PDV156BK",        new Screen("1366x768", 40, 22), MonitorType.LED);        // Write one line of code here to create the Collection    // TODO: [Compile error]: Types mismatch when trying to call add on these objects.    ArrayList<Collection> products = new ArrayList();    products.add(a1);    products.add(a2);    products.add(m1);    products.add(m2);        return products;  }    // Step 16  // Create print method here public static void genericPrint(Collection collection) {   System.out.println(collection); }  }